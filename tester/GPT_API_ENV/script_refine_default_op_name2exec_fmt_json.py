'''
Initialize the file cexec_name2fexec_name_json_path before quering the information about the instructions, because we need to check whether the content in cexec_name2fexec_name_json_path is correct.
Fortunately, we found the auto-generated content (generated by this script) in cexec_name2fexec_name_json_path is alwasy correct.
'''

from file_util import read_json, save_json
from project_cfg import default_op_name2exec_fmt_json_path
from project_cfg import default_cexec_name_query_result_demo_path
from project_cfg import cexec_name2fexec_name_json_path


def _get_fname(ori_title):
    patrs = ori_title.split('Instructions ')
    exec_fine_name = patrs[-1]
    return exec_fine_name

def _process_name(name):
    name = name.replace('\\', '').replace('{', '').replace('}', '')
    return name

def _parse_query_result_and_get_fine_exec_name(d):
    exec_title0 = d['exec_titles'][0]
    exec_fname = _get_fname(exec_title0)
    return _process_name(exec_fname)


if __name__ == '__main__':
    op_name2cexec_fmt = read_json(default_op_name2exec_fmt_json_path)
    cexec_name_query_result_demo = read_json(default_cexec_name_query_result_demo_path)
    new_d = {}
    cnames = list(op_name2cexec_fmt.values())
    for cname in cnames:
        cname = cname[7:-1]
        d = cexec_name_query_result_demo[cname]
        fine_exec_name = _parse_query_result_and_get_fine_exec_name(d)
        new_d[cname] = fine_exec_name
    save_json(cexec_name2fexec_name_json_path, new_d)
    
